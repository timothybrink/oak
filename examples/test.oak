"
This is just a super basic bunch of working Oak syntax.
"

(def .'function' /test .{
  (print (+ (test 0) (test 1)))

  [(test 2)]
})


(function ["Hello " "World," "from Oak.Rust!"])
(print (^ 0))

(if (= (type ^) 'function') .{
  (print 'is a function')
  true
} .{
  (print 'is not a function')
  false
})

(def .'boolTest' true)

(def .'helloStr' .'Hello World!')

(def .'helloWorld' /name .{
  (print name)
  (print (helloStr))
})

(def .'printName' /name .(helloWorld name))

(if boolTest .{
  (printName 'tim')
} .{
  (helloWorld 'Tim')
})

(def .'arr' [1 2 3 4])

([1 2 3] 2)

(foreach arr /i prev .{
  (print i)
})

(for arr /i prev .{
  (print i)
})

(print '----------')

(print (findIndex ['a' 'b' 'c'] 'b'))

(def .'map' (osm [0 1 2 3] ['0' '1' '2' 'f']))

(map 3)